{//;load functions}
{inject;{get;_gitcmd.functions}}

{//;output help}
{if;{logic;||;
{bool;{commandname};==;help};
{bool;{flag;_};==;{null}}};
{set;!~askhelp;{embedbuild;
author.name:{guildname};
author.icon_url:{guildicon};
title:Help for cht.sh;
color:{func.dlcolors;brightyellow};
description:Uses [cht.sh](http://cht.sh) to return TL{semi}DR-style help.

__**Arguments**__:;
fields.name:{prefix}cht.sh <query>;
fields.value:Returns the cht.sh response for the given `query`.;
}}
{//;only output json if commandname is help}
{if;{commandname};==;help;
{jget;~askhelp};
{embed;{jget;~askhelp}}
}
{return;false}
}

{//; Set the array here }
{set;!~request;{jget;{request;http://cheat.sh/{if;{flag;_};!=;;{uriencode;{flag;_}};:help}?qT&style=bw};body}}
{if;{get;~request};startswith;{lb};{set;!~request;{jget;{get;~request};answer}}}
{if;{get;~request};includes;Unknown topic.;{set;*bash.cht.failed;true};{set;*bash.cht.failed;false}}
{set;!~arr;{regexsplit;{get;~request};/(\n)/g}}
{//; Set max items per page }
{set;~items;55}
{//; Make sure args is a valid number }
{if;{flagset;p};{set;~p;{flag;p}};{set;~p;1}}
{//; Calculate the max page }
{set;~maxp;{ceil;{math;/;{length;{get;~arr}};{get;~items}}}}
{//; Make sure args doesn't exceed max pages }
{if;{get;~p};>;{get;~maxp};{set;~p;{get;~maxp}}}
{//; Make sure args isn't a negative }
{if;{get;~p};<=;0;{set;~p;1}}
{set;~title;Cheat Sheet for '{flag;_}' <http://cht.sh/{uriencode;{flag;_}}>}
{function;list;
{//; Set the start and end of the slice }
{set;~s;{math;*;{math;-;{get;~p};1};{get;~items}}}
{set;~e;{math;+;{get;~s};{get;~items}}}
{//; Output of the array }
{embedbuild;
title:{get;~title};
description:{repeat;`;3}bash
{foreach;~chtsht;{slice;{get;~arr};{get;~s};{get;~e}};{get;~chtsht}}
--------------------
Page {get;~p}/{get;~maxp}
{repeat;`;3}
}
}
{set;~msgid;{output;{embed;{func.list}}}}
{set;~used;0}
{if;{get;~maxp};>=;2;
{reactadd;{get;~msgid};⬅➡}
{repeat;
{//; Make sure only applicabl emojis work }
{set;~reaction;{waitreaction;{get;~msgid};{userid};⬅➡;true;300}}
{//; Remove emojis added by user }
{reactremove;{get;~msgid};⬅➡}
{//; Determine whether to add or decrease page }
{switch;{get;~reaction;3};
⬅;{set;~p;{math;-;{get;~p};1}};
➡;{set;~p;{math;+;{get;~p};1}}
}
{set;~used;{math;+;{get;~used};1}}
{if;{get;~p};<=;0;{set;~p;{get;~maxp}}}
{if;{get;~p};>;{get;~maxp};{set;~p;1}}
{//; Output the resulting page }
{edit;{get;~msgid};{func.list}};
9
}
{set;~title;Page switch limit reached.  Use `{prefix} {commandname} {flag;_} -p {math;+;{get;~p};1}` to continue.{newline}{get;~title}}
{edit;{get;~msgid};;{func.list}}
{//; Remove all emojis when waitreaction limit is reached }
{reactremove;{get;~msgid};{reactlist;{get;~msgid};{reactlist;{get;~msgid}}}}}