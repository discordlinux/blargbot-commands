{//;inject functions}
{inject;{get;_gitcmd.functions}}

{//;help function}
{function;help;
{set;!~mnhelp;{embedbuild;
author.name:{guildname};
author.icon_url:{guildicon};
title:Help for mn;
color:{func.dlcolors;brightorange};
description:Plan movie nights.  Will output a message 24 hours before the event, 1 hour before the event, and when the event starts.  The movie will be chosen randomly from entries provied through the `add` argument.;
fields.name:Flags;
fields.value:`-t`: Time that the movie night starts in Unix format (required for plan, reschedule).
`-r`: Role to mention in reminder messages (optional for plan, reschedule).
`-c`: Channel to output reminder messages in. Defaults to current channel (optional for plan, reschedule).

__**Arguments**__:;
fields.name:{prefix}mn add <name>;
fields.value:Add movie `name` to the list.;
fields.inline:false;
fields.name:{prefix}mn remove <name>;
fields.value:Remove movie `name` from the list.;
fields.inline:false;
fields.name:{prefix}mn plan <flags>;
fields.value:Plan a movie night with the settings provided by the given `flags` (see Flags above).;
fields.inline:false;
fields.name:{prefix}mn reschedule <id> <flags>;
fields.value:Reschedule planned movie night `id` with the settings provided by the given `flags` (see Flags above).  `id` is the Unix time the movie was previously scheduled at.;
fields.inline:false;
fields.name:{prefix}mn cancel <id>;
fields.value:Cancel planned movie night `id`. `id` is the Unix time the movie was previously scheduled at.;
fields.inline:false;
}}
{//;only output json if commandname is help}
{if;{commandname};==;help;
{jget;~mnhelp};
{embed;{jget;~mnhelp}}
}
}

{//;function to add movies to the list}
{function;addmovie;
{//;check input}
{if;{flag;_};==;{null};
{func.error;No movie provided.}
{return}}
{//;get info about movie}
{set;!~omdb;{func.getjson;https://www.omdbapi.com/?t={uriencode;{flag;_}}&apikey=2a94c44e}}
{if;{jget;~omdb;Title};==;{null};
{func.error;No results found for '{flag;_}'}
{return}}
{//;check if movie is already in list}
{set;!~mn.check;{filter;~movie;{jvalues;_mn.movies};
{logic;&&;
{bool;{jget;~movie;Title};==;{jget;~omdb;Title}};
{bool;{jget;~movie;Released};==;{jget;~omdb;Released}}}
}}
{if;{length;{get;~mn.check}};>;0;
{embed;{embedbuild;
author.name:{username}#{userdiscrim} ({userid});
author.icon_url:{useravatar};
title:'{jget;~omdb;Title}' Already in Movie List;
color:{func.dlcolors;orange};
image.url:{jget;~omdb;Poster};
description:**Title**: {jget;~omdb;Title}
**Released**: {jget;~omdb;Released}
**Runtime**: {jget;~omdb;Runtime}
**Genre**: {jget;~omdb;Genre}
**Director**: {jget;~omdb;Director}
**Writer**: {jget;~omdb;Writer}
**Actors**: {jget;~omdb;Actors}
**Plot Summary**: {jget;~omdb;Plot}
}}
{return}
}
{//;add movie to list}
{if;{get;_mn.movies};==;{null};
{set;!_mn.movies;[]}}
{push;_mn.movies;{get;~omdb}}
{set;!_mn.movies;{jclean;_mn.movies}}
{//;output info about movie}
{embed;{embedbuild;
author.name:{username}#{userdiscrim} ({userid});
author.icon_url:{useravatar};
title:'{jget;~omdb;Title}' Added to Movie List;
color:{func.dlcolors;green};
image.url:{jget;~omdb;Poster};
description:**Title**: {jget;~omdb;Title}
**Released**: {jget;~omdb;Released}
**Runtime**: {jget;~omdb;Runtime}
**Genre**: {jget;~omdb;Genre}
**Director**: {jget;~omdb;Director}
**Writer**: {jget;~omdb;Writer}
**Actors**: {jget;~omdb;Actors}
**Plot Summary**: {jget;~omdb;Plot}
}}
}

{//;function to remove movies from the list}
{function;removemovie;
{//;check input}
{if;{flag;_};==;{null};
{func.error;No movie provided.}
{return}}
{if;{get;_mn.movies};==;{null};
{func.error;No movies in list.}
{return}}
{//;check if movie is in list}
{set;!~omdb;{jget;{filter;~movie;{jvalues;_mn.movies};{bool;{lower;{jget;~movie;Title}};==;{lower;{flag;_}}}};0}}
{if;{jget;~omdb;Title};==;{null};
{func.error;No results found for '{flag;_}'}
{return}}
{//;remove movie from list}
{set;!_mn.movies;{filter;~movie;{jvalues;_mn.movies};{bool;{lower;{jget;~movie;Title}};!=;{lower;{flag;_}}}}}
{set;!_mn.movies;{jclean;_mn.movies}}
{//;output info about movie}
{embed;{embedbuild;
author.name:{username}#{userdiscrim} ({userid});
author.icon_url:{useravatar};
title:'{jget;~omdb;Title}' Removed From Movie List;
color:{func.dlcolors;red};
image.url:{jget;~omdb;Poster};
description:**Title**: {jget;~omdb;Title}
**Released**: {jget;~omdb;Released}
**Runtime**: {jget;~omdb;Runtime}
**Genre**: {jget;~omdb;Genre}
**Director**: {jget;~omdb;Director}
**Writer**: {jget;~omdb;Writer}
**Actors**: {jget;~omdb;Actors}
**Plot Summary**: {jget;~omdb;Plot}
}}
}

{//;function to plan movie night}
{function;plan;
{//;check movie list}
{if;{logic;||;
{bool;{get;_mn.movies};==;{null}};
{bool;{length;{jget;_mn.movies}};==;0}};
{func.error;No movies in list to choose from.  Use `add` to add a movie first.}
{return}}
{//;check time input}
{if;{numformat;{flag;t};};==;NaN;
{func.error;Unix time to start movie night not provided.}
{return}}
{set;!~plan.timer.{flag;t};{math;-;{flag;t};{time;X}}}
{if;{get;~plan.timer.{flag;t}};<=;0;
{func.error;Invalid Unix time provided '{flag;t}'.}
{return}}
{//;shuffle list}
{shuffle;{get;_mn.movies}}
{//;pop movie from list to choose movie}
{set;!_mn.movie.{flag;t};{pop;_mn.movies}}
{//;output info}
{set;!_mn.msg;{send;{channelid;{flag;c}};;{embedbuild;
author.name:{username}#{userdiscrim} ({userid});
author.icon_url:{useravatar};
title:Movie Night Planned;
color:{func.dlcolors;green};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Time**: <t:{flag;t}> (<t:{flag;t}:R>)
**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}

*React with ðŸŽ¥ to be reminded about movie night*
}}}
{void;{reactadd;{channelid;{flag;c}};{get;_mn.msg};ðŸŽ¥}}

{//;set variables}
{if;{flag;r};!=;{null};
{set;!~mn.role;{roleid;{flag;r}}};
{set;!~mn.role;{get;_mn.role}}
}
{if;{flag;c};!=;{null};
{set;!~mn.channel;{flag;c}};
{set;!~mn.channel;{get;_mn.channel}}
}
{//;start timers}
{//;1 day before}
{if;{math;-;{get;~plan.timer.{flag;t}};86400};>;0;
{timer;
{//;get users to ping}
{set;!~pings;{filter;~u;{reactlist;{channelid;{flag;c}};{get;_mn.msg};ðŸŽ¥};{bool;{get;~u};!=;{exec;botid}}}}
{//;check if variable is still set and send reminder}
{if;{get;_mn.movie.{flag;t}};!=;{null};
{void;{send;{channelid;{get;~mn.channel};quiet};{foreach;~p;{jget;~pings};{usermention;{get;~p}}{space}};
{embedbuild;
title:Movie Night Reminder;
color:{func.dlcolors;fuchsia};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Time**: <t:{flag;t}> (<t:{flag;t}:R>)
**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
};{math;-;{get;~plan.timer.{flag;t}};86400}s}
}
{//;1 hour before}
{if;{math;-;{get;~plan.timer.{flag;t}};3600};>;0;
{//;if more than 1 hour before start time, set timer for 1 hour before}
{timer;
{//;get users to ping}
{set;!~pings;{filter;~u;{reactlist;{channelid;{flag;c}};{get;_mn.msg};ðŸŽ¥};{bool;{get;~u};!=;{exec;botid}}}}
{//;check if variable is still set and send reminder}
{if;{get;_mn.movie.{flag;t}};!=;{null};
{void;{send;{channelid;{get;~mn.channel};quiet};{foreach;~p;{jget;~pings};{usermention;{get;~p}}{space}};
{embedbuild;
title:Movie Night Reminder;
color:{func.dlcolors;fuchsia};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Time**: <t:{flag;t}> (<t:{flag;t}:R>)
**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
};{math;-;{get;~plan.timer.{flag;t}};3600}s}
}
{//;actual start time}
{timer;
{//;get users to ping}
{set;!~pings;{filter;~u;{reactlist;{channelid;{flag;c}};{get;_mn.msg};ðŸŽ¥};{bool;{get;~u};!=;{exec;botid}}}}
{//;check if variable is still set and send reminder}
{if;{get;_mn.movie.{flag;t}};!=;{null};
{void;{send;{channelid;{get;~mn.channel};quiet};{foreach;~p;{jget;~pings};{usermention;{get;~p}}{space}};
{embedbuild;
title:Movie Night Starting!;
color:{func.dlcolors;cyan};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
{set;_mn.movie.{flag;t}}
};{get;~plan.timer.{flag;t}}s}
}

{//;function to reschedule movie night}
{function;reschedule;
{//;check ID input}
{if;{get;_mn.movie.{flag;_}};==;{null};
{func.error;Invalid ID provided.}
{return}}
{//;check time input}
{if;{numformat;{flag;t};};==;NaN;
{func.error;Unix time to start movie night not provided.}
{return}}
{set;!~plan.timer.{flag;t};{math;-;{flag;t};{time;X}}}
{if;{get;~plan.timer.{flag;t}};<;0;
{func.error;Invalid Unix time provided.}
{return}}
{//;set variable for new time to contents of old variable}
{set;!_mn.movie.{flag;t};{get;_mn.movie.{flag;_}}}
{//;delete old variable}
{set;!_mn.movie.{flag;_}}
{//;output info}
{set;!_mn.msg;{send;{channelid;{flag;c}};;{embedbuild;
author.name:{username}#{userdiscrim} ({userid});
author.icon_url:{useravatar};
title:Movie Night Rescheduled;
color:{func.dlcolors;green};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Time**: <t:{flag;t}> (<t:{flag;t}:R>)
**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
{//;set variables}
{if;{flag;r};!=;{null};
{set;!~mn.role;{roleid;{flag;r}}};
{set;!~mn.role;{get;_mn.role}}
}
{if;{flag;c};!=;{null};
{set;!~mn.channel;{flag;c}};
{set;!~mn.channel;{get;_mn.channel}}
}
{//;start timers}
{//;1 day before}
{if;{math;-;{get;~plan.timer.{flag;t}};86400};>;0;
{timer;
{//;get users to ping}
{set;!~pings;{filter;~u;{reactlist;{channelid;{flag;c}};{get;_mn.msg};ðŸŽ¥};{bool;{get;~u};!=;{exec;botid}}}}
{//;check if variable is still set and send reminder}
{if;{get;_mn.movie.{flag;t}};!=;{null};
{void;{send;{channelid;{get;~mn.channel};quiet};{foreach;~p;{jget;~pings};{usermention;{get;~p}}{space}};
{embedbuild;
title:Movie Night Reminder;
color:{func.dlcolors;fuchsia};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Time**: <t:{flag;t}> (<t:{flag;t}:R>)
**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
};{math;-;{get;~plan.timer.{flag;t}};86400}s}
}
{//;1 hour before}
{if;{math;-;{get;~plan.timer.{flag;t}};3600};<;0;
{//;if less than 1 hour before start time, send reminder now}
{if;{get;_mn.movie.{flag;t}};!=;{null};
{void;{send;{channelid;{get;~mn.channel};quiet};{rolemention;{get;~mn.role};quiet};
{embedbuild;
title:Movie Night Reminder;
color:{func.dlcolors;fuchsia};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Time**: <t:{flag;t}> (<t:{flag;t}:R>)
**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
};
{//;else start timer}
{timer;
{//;get users to ping}
{set;!~pings;{filter;~u;{reactlist;{channelid;{flag;c}};{get;_mn.msg};ðŸŽ¥};{bool;{get;~u};!=;{exec;botid}}}}
{//;check if variable is still set and send reminder}
{if;{get;_mn.movie.{flag;t}};!=;{null};
{void;{send;{channelid;{get;~mn.channel};quiet};{foreach;~p;{jget;~pings};{usermention;{get;~p}}{space}};
{embedbuild;
title:Movie Night Reminder;
color:{func.dlcolors;fuchsia};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Time**: <t:{flag;t}> (<t:{flag;t}:R>)
**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
};{math;-;{get;~plan.timer.{flag;t}};3600}s}
}
{//;actual start time}
{timer;
{//;get users to ping}
{set;!~pings;{filter;~u;{reactlist;{channelid;{flag;c}};{get;_mn.msg};ðŸŽ¥};{bool;{get;~u};!=;{exec;botid}}}}
{//;check if variable is still set and send reminder}
{if;{get;_mn.movie.{flag;t}};!=;{null};
{void;{send;{channelid;{get;~mn.channel};quiet};{foreach;~p;{jget;~pings};{usermention;{get;~p}}{space}};
{embedbuild;
title:Movie Night Starting!;
color:{func.dlcolors;cyan};
image.url:{jget;_mn.movie.{flag;t};Poster};
description:**Title**: {jget;_mn.movie.{flag;t};Title}
**Released**: {jget;_mn.movie.{flag;t};Released}
**Runtime**: {jget;_mn.movie.{flag;t};Runtime}
**Genre**: {jget;_mn.movie.{flag;t};Genre}
**Director**: {jget;_mn.movie.{flag;t};Director}
**Writer**: {jget;_mn.movie.{flag;t};Writer}
**Actors**: {jget;_mn.movie.{flag;t};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;t};Plot}
}}}
{set;_mn.movie.{flag;t}}
};{get;~plan.timer.{flag;t}}s}
}

{//;function to cancel movie night}
{function;cancel;
{//;check ID input}
{if;{get;_mn.movie.{flag;_}};==;{null};
{func.error;Invalid ID provided.}
{return}}
{//;output info}
{embed;{embedbuild;
author.name:{username}#{userdiscrim} ({userid});
author.icon_url:{useravatar};
title:Movie Night Canceled;
color:{func.dlcolors;red};
image.url:{jget;_mn.movie.{flag;_};Poster};
description:**Time**: <t:{flag;_}> (<t:{flag;_}:R>)
**Title**: {jget;_mn.movie.{flag;_};Title}
**Released**: {jget;_mn.movie.{flag;_};Released}
**Runtime**: {jget;_mn.movie.{flag;_};Runtime}
**Genre**: {jget;_mn.movie.{flag;_};Genre}
**Director**: {jget;_mn.movie.{flag;_};Director}
**Writer**: {jget;_mn.movie.{flag;_};Writer}
**Actors**: {jget;_mn.movie.{flag;_};Actors}
**Plot Summary**: {jget;_mn.movie.{flag;_};Plot}
}}
{//;delete old variable}
{set;!_mn.movie.{flag;_}}
}

{//;detect arguments}
{switch;{lower;{flag;_}};
["add"];
{func.addmovie};
["remove","rm"];
{func.removemovie};
["plan"];
{func.plan};
["reschedule"];
{func.reschedule};
["cancel"];
{func.cancel};
{func.help}
}